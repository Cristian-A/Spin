
# Commands:

cppVersion = -std=c++2a

header = ../Source/Common/Header.hpp
interface = ../Source/Common/interface.hpp
stack = ../Source/Common/Stack.hpp

token = ../Source/Token/Token.hpp
program = ../Source/Compiler/Program.hpp

rule compile
    command = clang++ -g -c -o $out $in $cppVersion

rule link
    command = clang++ -g -o $out $in $cppVersion

# Virtual Processor

build      Build/Token.o: compile ../Source/Token/Token.cpp | $header $token
build      Build/Lexer.o: compile ../Source/Lexer/Lexer.cpp | $header $token

build    Build/Manager.o: compile ../Source/Manager/Manager.cpp | $header

build      Build/Regex.o: compile ../Source/Utility/Regex.cpp | $header
build  Build/Converter.o: compile ../Source/Utility/Converter.cpp | $header

build    Build/Program.o: compile ../Source/Compiler/Program.cpp | $header $program $token
build   Build/Compiler.o: compile ../Source/Compiler/Compiler.cpp | $header $stack $program $token
build Build/Decompiler.o: compile ../Source/Compiler/Decompiler.cpp | $header $program

build  Build/Processor.o: compile ../Source/Virtual/Processor.cpp | $header $stack $program

# Main:

build Build/Test.o: compile Test.cpp | $interface $header $program $token

# Link:

build Test: link Build/Test.o Build/Token.o Build/Lexer.o Build/Manager.o Build/Regex.o Build/Converter.o Build/Program.o Build/Compiler.o Build/Decompiler.o Build/Processor.o
