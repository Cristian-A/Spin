
import Foundation;

enumerator E: String {
	case hello = "hello";
	case bold = "bold";
}

enumerator I: UInt8 {
	case one;       // 1.
	case two;       // 2.
	case five = 5;  // 5.
	case six = 6;   // 6.
}

// Structures are always passed by value.
structure ST {
	UInt32 x = 0;
	UInt32 y = 0;
}

extension String2: String {

	proc hello() {

	}

}

exception Exception {

	create() { }
	delete() { }

}

library Foundation {

	public static class StackType: Type, Stack {

		create(x: Int32) {

		}

		delete(_ y: String) {
			y = "dfggfdd";
		}

	}

}

func Main(args: [String]) -> Int32 {

	UInt32 i = 0;
	if (i == 56) {
		StackType s = new StackType(x: 78);
		s.delete("fdff");
		delete("hhhhh") s;
	}

	return ExitCodes.Success;
}

